# Generated by Django 2.2.5 on 2020-03-07 09:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employee_id', models.CharField(default='', max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
                ('job_profile', models.CharField(max_length=20)),
                ('qualification', models.CharField(max_length=10)),
                ('phone', models.IntegerField()),
                ('department', models.CharField(max_length=20)),
                ('gender', models.CharField(choices=[('male', 'MALE'), ('female', 'FEMALE'), ('others', 'OTHERS')], max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('hospital_code', models.IntegerField(primary_key=True, serialize=False)),
                ('hospital_name', models.CharField(max_length=100)),
                ('place', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Normal_values',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_name', models.CharField(max_length=50)),
                ('least_value', models.FloatField()),
                ('highest_value', models.FloatField()),
                ('units', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('patient_id', models.IntegerField(primary_key=True, serialize=False)),
                ('yob', models.DateTimeField(default=django.utils.timezone.now)),
                ('phone', models.IntegerField()),
                ('place', models.CharField(max_length=20)),
                ('gender', models.CharField(choices=[('male', 'MALE'), ('female', 'FEMALE'), ('others', 'OTHERS')], max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='Patient_personal_info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('yob', models.DateTimeField(default=django.utils.timezone.now)),
                ('gender', models.CharField(choices=[('male', 'MALE'), ('female', 'FEMALE'), ('others', 'OTHERS')], max_length=6)),
                ('delivary', models.CharField(choices=[('not applicable', 'NOT APPLICABLE'), ('Normal', 'NORMAL'), ('c-section', 'C-SECTION')], max_length=15)),
                ('childhood_trauma', models.BooleanField()),
                ('smoking', models.CharField(choices=[('never', 'NEVER'), ('former', 'FORMER'), ('ever', 'EVER')], max_length=15)),
                ('pack_years', models.IntegerField()),
                ('chewing', models.CharField(choices=[('no', 'NO'), ('betel nut', 'BETEL NUT'), ('tobocco', 'TOBOCCO'), ('others', 'OTHERS')], max_length=15)),
                ('drinking', models.CharField(choices=[('no', 'NO'), ('daily', 'DAILY'), ('weekly', 'WEEKLY'), ('monthly', 'MONTHLY'), ('others', 'OTHERS')], max_length=15)),
                ('place', models.CharField(choices=[('urban', 'URBAN'), ('rural', 'RURAL')], max_length=20)),
                ('housing', models.CharField(choices=[('individual', 'INDIVIDUAL'), ('apartment', 'APARTMENT'), ('hostel', 'HOSTEL'), ('others', 'OTHERS')], max_length=10)),
                ('occupation', models.CharField(max_length=20)),
                ('family_type', models.CharField(choices=[('nuclear', 'NUCLEAR'), ('combined', 'COMBINED'), ('others', 'OTHERS')], max_length=10)),
                ('meditation', models.BooleanField()),
                ('pets', models.BooleanField()),
                ('garden', models.BooleanField()),
                ('exercises', models.CharField(choices=[('sedentary', 'SEDENTARY'), ('moderate', 'MODERATE'), ('high', 'HIGH')], max_length=15)),
                ('food_place', models.CharField(choices=[('home', 'HOME'), ('outside', 'OUTSIDE')], max_length=15)),
                ('food', models.CharField(choices=[('veg', 'VEG'), ('non-veg', 'NON-VEG')], max_length=10)),
                ('marital_status', models.CharField(choices=[('unmarried', 'UNMARRIED'), ('married', 'MARRIED'), ('divorced', 'DIVORCED'), ('widowed', 'WIDOWED'), ('others', 'OTHERS')], max_length=15)),
                ('sleep', models.CharField(choices=[('good', 'GOOD'), ('insomnia', 'INSOMNIA'), ('day time sleepiness', 'DAY TIME SLEEPINESS')], max_length=20)),
                ('work_stress', models.BooleanField()),
                ('family_stress', models.BooleanField()),
                ('weekend_habits', models.CharField(max_length=50)),
                ('other_mentions', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('visit_number', models.IntegerField()),
                ('hospital_code', models.IntegerField()),
                ('employee_id', models.CharField(max_length=10)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'unique_together': {('patient_id', 'visit_number')},
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine', models.CharField(max_length=100)),
                ('dosage', models.CharField(max_length=100)),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Visit')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(default='', max_length=10)),
                ('mentor', models.CharField(default='', max_length=50)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Confirmation_Tests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IL6', models.FloatField()),
                ('IL10', models.FloatField()),
                ('IFNG', models.FloatField()),
                ('TNF', models.FloatField()),
                ('TGFB', models.FloatField()),
                ('sRANKL', models.FloatField()),
                ('IL1B', models.FloatField()),
                ('IL17', models.FloatField()),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Visit')),
            ],
        ),
        migrations.CreateModel(
            name='BMP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('glucose_random', models.FloatField()),
                ('calcium', models.FloatField()),
                ('sodium', models.FloatField()),
                ('magnesium', models.FloatField()),
                ('potassium', models.FloatField()),
                ('chloride', models.FloatField()),
                ('serum_cretinine', models.FloatField()),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Visit')),
            ],
        ),
        migrations.CreateModel(
            name='Basic_Tests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RA_Factor', models.BooleanField()),
                ('CRP', models.BooleanField()),
                ('ESR', models.FloatField()),
                ('WBC', models.FloatField()),
                ('Neutrophils', models.FloatField()),
                ('Lymphocytes', models.FloatField()),
                ('Monocytes', models.FloatField()),
                ('Eosinophils', models.FloatField()),
                ('Basophils', models.FloatField()),
                ('Neu', models.FloatField()),
                ('Lym', models.FloatField()),
                ('Mon', models.FloatField()),
                ('Eos', models.FloatField()),
                ('Bas', models.FloatField()),
                ('RBC', models.FloatField()),
                ('SGOT', models.FloatField()),
                ('SGPT', models.FloatField()),
                ('CRP_Highly_Sensitive', models.FloatField()),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Visit')),
            ],
        ),
        migrations.CreateModel(
            name='Advanced_Tests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('HGB', models.FloatField()),
                ('HCT', models.FloatField()),
                ('MCV', models.FloatField()),
                ('MCH', models.FloatField()),
                ('MCHC', models.FloatField()),
                ('RDW_CV', models.FloatField()),
                ('RDW_SD', models.FloatField()),
                ('PLT', models.FloatField()),
                ('MPV', models.FloatField()),
                ('PDW', models.FloatField()),
                ('PCT', models.FloatField()),
                ('P_LCC', models.FloatField()),
                ('P_LCR', models.FloatField()),
                ('Albumin', models.FloatField()),
                ('Alkaline_Phosphatase', models.FloatField()),
                ('Blood_Urea', models.FloatField()),
                ('Direct_Bilirubin', models.FloatField()),
                ('Glucose_Fasting', models.FloatField()),
                ('Glucose_Post_Prandial', models.FloatField()),
                ('HBA1C', models.FloatField()),
                ('HDL_Cholesterol', models.FloatField()),
                ('LDH', models.FloatField()),
                ('LDL', models.FloatField()),
                ('Cholesterol', models.FloatField()),
                ('Rheumatoid_Factor_Latex', models.FloatField()),
                ('Total_Bilirubin', models.FloatField()),
                ('Total_Cholesterol', models.FloatField()),
                ('Total_Protein', models.FloatField()),
                ('Uric_Acid', models.FloatField()),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Visit')),
            ],
        ),
        migrations.CreateModel(
            name='ACR_Scoring',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('small_joints', models.IntegerField()),
                ('large_joints', models.IntegerField()),
                ('serology', models.CharField(choices=[('neg RF and neg ACPA', 'NEG RF AND NEG ACPA'), ('low-pos RF or ACPA', 'LOW-POS RF OR ACPA'), ('high-pos RF or ACPA', 'HIGH-POS RF OR ACPA'), ('none', 'NONE')], max_length=20)),
                ('apr', models.CharField(choices=[('normal CRP and ESR', 'NORMAL CRP AND ESR'), ('abnormal CRP or ESR', 'ABNORMAL CRP AND ESR'), ('none', 'NONE')], max_length=20)),
                ('symptom_duration', models.CharField(choices=[('< 6 weeks', '< 6 WEEKS'), ('> 6 weeks', '> 6 WEEKS')], max_length=15)),
                ('bone_test_score', models.IntegerField()),
                ('serology_test_score', models.IntegerField()),
                ('syptom_duration_score', models.IntegerField()),
                ('final_acr_score', models.IntegerField()),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Visit')),
            ],
        ),
    ]
